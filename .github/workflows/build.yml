name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          #- ubuntu-20.04
          - windows-2022
          #- windows-2019
          - macos-12
          #- macos-11
        build_type:
          - Debug
          - Release
        qt:
          - version: "5.15.2"
            requested: "5.15"
          - version: "6.3.2"  # Qt 6.3 is not an LTS version, so '6.3.*' always resolves to '6.3.2'
            requested: "6.3.*"

    steps:
      - name: Install Qt with options and default aqtversion
        if: ${{ !matrix.aqtversion && matrix.qt.version }}
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: null  # use whatever the default is
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          cache: true

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install ninja-build tool (must be after Qt due PATH changes)
        uses: turtlesec-no/get-ninja@main

      - name: Make sure MSVC is found when Ninja generator is in use
        uses: ilammy/msvc-dev-cmd@v1

      - name: Create build directory
        run: mkdir build

      - name: Install dependencies on Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt update -qq
          sudo apt install -y doxygen graphviz memcached libmemcached-dev libpwquality-dev libjemalloc-dev

      - name: Configure project on Linux
        if: runner.os == 'Linux'
        run: >
          cmake -S . -B ./build -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_ALL=ON
          -DPLUGIN_VIEW_GRANTLEE=OFF -DPLUGIN_VIEW_CUTELEE=OFF -DPLUGIN_VIEW_CLEARSILVER=OFF
          -DPLUGIN_VIEW_EMAIL=OFF -DUSE_JEMALLOC=ON -DPLUGIN_UWSGI=OFF
          -DENABLE_MAINTAINER_CFLAGS=${{ matrix.build_type == 'Debug' }}

      - name: Configure project on macOS
        if: runner.os == 'macOS'
        run: >
          cmake -S . -B ./build -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_ALL=ON
          -DPLUGIN_VIEW_GRANTLEE=OFF -DPLUGIN_VIEW_CUTELEE=OFF -DPLUGIN_VIEW_CLEARSILVER=OFF
          -DPLUGIN_VIEW_EMAIL=OFF -DUSE_JEMALLOC=OFF -DPLUGIN_UWSGI=OFF -DBUILD_DOCS=OFF
          -DPLUGIN_VALIDATOR_PWQUALITY=OFF -DPLUGIN_MEMCACHED=OFF -DUSE_MIMALLOC=OFF
          -DENABLE_MAINTAINER_CFLAGS=${{ matrix.build_type == 'Debug' }}

      - name: Configure project on Window
        if: runner.os == 'Windows'
        run: >
          cmake -S . -B ./build -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_ALL=ON
          -DPLUGIN_VIEW_GRANTLEE=OFF -DPLUGIN_VIEW_CUTELEE=OFF -DPLUGIN_VIEW_CLEARSILVER=OFF
          -DPLUGIN_VIEW_EMAIL=OFF -DUSE_JEMALLOC=OFF -DPLUGIN_UWSGI=OFF -DBUILD_DOCS=OFF
          -DPLUGIN_VALIDATOR_PWQUALITY=OFF -DPLUGIN_MEMCACHED=OFF -DUSE_MIMALLOC=OFF
          -DENABLE_MAINTAINER_CFLAGS=${{ matrix.build_type == 'Debug' }}

      - name: Build project
        run: cmake --build ./build

      - name: Run tests
        if: matrix.build_type == 'Debug'
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure

      - name: Read tests log when it fails
        uses: andstor/file-reader-action@v1
        if: ${{ failure() && matrix.build_type == 'Debug' }}
        with:
          path: "./build/Testing/Temporary/LastTest.log"
